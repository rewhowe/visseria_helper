function studlyCase(e){return e.split(/ |_/).map(e=>e[0].toUpperCase()+e.slice(1)).join("")}function snakeCase(e){return e.replace(" ","_").toLowerCase()}function int(e){return parseInt(e)||0}$(function(){if(window.matchMedia("only screen and (min-width: 640px)").matches)return;const e=$(".js-up-button"),t=$(".js-down-button");$(document).on("focus",'input[type="number"]',function(){let a=this.getBoundingClientRect();e.removeClass("hidden").css({top:a.y+window.pageYOffset+"px",left:a.right+window.pageXOffset+"px"}),t.removeClass("hidden").css({top:a.y+window.pageYOffset+"px",left:a.left-t.outerWidth()+window.pageXOffset+"px"})}).on("focusout",'input[type="number"]',function(){e.addClass("hidden"),t.addClass("hidden")}),e.on("mousedown",function(e){const t=$('input[type="number"]:focus');t.val(int(t.val())+1).trigger("change"),e.preventDefault()}),t.on("mousedown",function(e){const t=$('input[type="number"]:focus');t.val(int(t.val())-1).trigger("change"),e.preventDefault()}),$(document).on("change",'input[type="number"]',function(){let e=int($(this).val());this.max&&(e=Math.min(this.max,e)),this.min&&(e=Math.max(this.min,e)),$(this).val(e)})});const Select={KEY_DELIMITER:".",makeKey:function(e,t){return e+Select.KEY_DELIMITER+t},makeGroupedSelect:function(e,t,a=!1){const s=$('<select class="'+t+'">');s.append("<option selected"+(a?" disabled":"")+">-</option>");for(let t in e){$optGroup=$('<optgroup label="'+t+'">');for(let a in e[t]){const s=t+Select.KEY_DELIMITER+a,i=$('<option value="'+s+'">'+e[t][a]+"</option>");$optGroup.append(i)}s.append($optGroup)}return s},makeSelect:function(e,t,a=!1){const s=$('<select class="'+t+'">');s.append("<option selected"+(a?" disabled":"")+">-</option>");for(let t in e)s.append($('<option value="'+t+'">'+t+"</option>"));return s}},Gear={GEAR:{"Basic Gear":{"Angel Feather":{cost:3,dmg:0,hp:1,spec:1,spec_type:"Soul"},"Ring Of Remnai":{cost:3,dmg:0,hp:1,spec:1,spec_type:"Intelligence"},"Badge Of Heroism":{cost:3,dmg:1,hp:0,spec:1,spec_type:"Courage"},"Blank Totem":{cost:3,dmg:0,hp:1,spec:1,spec_type:"Aura"},"Loaded Die":{cost:3,dmg:1,hp:0,spec:1,spec_type:"Luck"}},"Intermediate Gear":{"Exxo Armor":{cost:5,dmg:0,hp:3,spec:2,spec_type:"Soul"},"Trinity Staff":{cost:5,dmg:1,hp:2,spec:2,spec_type:"Intelligence"},"Darkling Sword":{cost:5,dmg:3,hp:0,spec:2,spec_type:"Courage"},"Illumination Pendant":{cost:5,dmg:0,hp:3,spec:2,spec_type:"Aura"},"Broken Dagger":{cost:5,dmg:2,hp:1,spec:2,spec_type:"Luck"}},"Standard Gear":{Thirstfire:{cost:5,dmg:2,hp:0,effect:"Enemies attacked by the equipped User are debuffed with Bleed"},"Mugger Dagger":{cost:5,dmg:2,hp:0,effect:"Equipped User gains 1G for every successful attack on an Enemy if Success roll"},"Robbit's Foot":{cost:5,dmg:1,hp:1,effect:"Equipped User gains +2 Success roll"},"Devil Charm":{cost:5,dmg:3,hp:3,effect:"Equipped User gains -2 Success roll"},"Bravery Charm":{cost:5,dmg:2,hp:1,effect:"Equipped User gains +1 Decisive roll in battle involving User"},"Artifact Coin":{cost:5,dmg:2,hp:2,effect:"Item is treated as 5G"},"Absorbing Spirit":{cost:5,dmg:2,hp:2,effect:"Equipped User's Ultimate recharge rate is 2"},"Regenerating Armour":{cost:5,dmg:0,hp:3,effect:"Any DMG the equipped User receives from any source is reduced by 1 DMG"},"The Murmur":{cost:5,dmg:5,hp:0,effect:"While equipped with The Murmur: equipped User is debuffed with Silence",onEquip:function(e){e.addDebuff("silence")}}},"Legendary Gear":{"Wilhelm's Gauntlet":{cost:15,dmg:0,hp:5,limit_class:"Guardian",effect:"When the equipped User is attacked: deal DMG equal to the equipped User's DMG to the attacking Enemy. Can only be equipped by Guardians",spec:3,spec_type:"Soul"},"Solomon's Cipher":{cost:15,dmg:2,hp:3,limit_class:"Spellweaver",effect:"The equipped User can attack and use abilities once each before becoming inactive. Can only be equipped by Spellweavers",spec:3,spec_type:"Intelligence"},"Zatyr's Saber":{cost:15,dmg:5,hp:0,limit_class:"Slayer",effect:"When the equipped User attacks: equipped User recovers (Room Lvl) HP. Can only be equipped by Slayers",spec:3,spec_type:"Courage"},"Magus' Cloak":{cost:15,dmg:1,hp:4,limit_class:"Enchanter",effect:"Remove all debuffs from the equipped User. Equipped User is immune to debuffs. Can only be equipped by Enchanters",spec:3,spec_type:"Aura",onEquip:function(e){for(let t of["blind","bleed","fear","silence","curse","undead","sleep"])e.removeDebuff(t)}},"Weeper's Satchel":{cost:15,dmg:3,hp:2,limit_class:"Trickster",effect:"When this item is acquired: acquire 1 Item and +XG equal to D10 roll. The equipped User gains +2 Success roll. Can only be equipped by Tricksters",spec:3,spec_type:"Luck"}}},getGearData:function(e){e=e.split(Select.KEY_DELIMITER);const t=Gear.GEAR[e[0]];if(!t)return;const a=t[e[1]];return a.category=e[0],a.name=e[1],a},getGearKey:function(e){return Select.makeKey(e.category,e.name)}};Gear.$GEAR_SELECT=function(){const e={};for(let t in Gear.GEAR){e[t]={};for(let a in Gear.GEAR[t]){const s=Gear.GEAR[t][a],i=[s.dmg||0,s.hp||0,s.spec?s.spec+" "+s.spec_type:0];e[t][a]=a+" ("+i.join("/")+")"+(s.limit_class?" - "+s.limit_class+" only":"")}}return Select.makeGroupedSelect(e,"js-gear-select")}();const Classes={CLASSES:{Guardian:{spec_type:"Soul",characters:{"Albatross Grand":{title:"The Armoured Angel",dmg:2,hp:18,abilities:{passive:{name:"Endure",effect:"Any DMG Albatross Grand receives is reduced by Room Lvl (#room). When Albatross Grand uses an Ultimate ability: this ability is negated"},active:{name:"Divine Intervention",effect:"When an ally User is attacked: Albatross Grand is attacked instead"},ultimate:{name:"Beckoning Light",effect:"Enemies can only attack Albatross Grand. Any DMG Albatross Grand receives is reduced by Soul Lvl (#spec) DMG. This ability lasts until Albatross Grand becomes active",recharge:7}}},"T4O MKII":{title:"The Soul in the Shell",dmg:3,hp:17,abilities:{passive:{name:"Welded Will",effect:"T4O MKII cannot be debuffed with Bleed or Fear. T4O MKII gains Soul Lvl (#spec) Max HP"},active:{name:"Self Destruct",effect:"Declare X (X cannot be greater than T4O MKII's current HP): T4O MKII deals X DMG to 1 Enemy and loses X HP "},ultimate:{name:"Recharge",effect:"T4O MKII Recovers to Max HP",recharge:7}}},Lilith:{title:"The Bad Blood",dmg:1,hp:16,abilities:{passive:{name:"Tear",effect:"When Lilith attacks an Enemy: the attacked Enemy is debuffed with Bleed"},active:{name:"Blood Drain",effect:"If an active Enemy is debuffed with Bleed, remove the debuff: deal Soul Lvl (#spec) DMG to that Enemy. Lilith Recovers Soul Lvl (#spec) HP"},ultimate:{name:"Vampirism",effect:"All enemies are now debuffed with Bleed",recharge:6}}}}},Spellweaver:{spec_type:"Intelligence",characters:{"Harmony Marx":{title:"The Sorcerer Songstress",dmg:4,hp:14,abilities:{passive:{name:"Tempo",effect:"When Harmony Marx attacks an enemy: Harmony Marx gains + Intelligence Lvl (#spec) Success roll. This effect stacks but resets when Harmony Marx leaves the current Room, Dies or uses an ability"},active:{name:"Song of Silence",effect:"Success roll: debuff Intelligence Lvl (#spec) Enemies with Silence until Harmony Marx becomes active"},ultimate:{name:"Da Capo",effect:"Success roll: all inactive Users become active",recharge:10}}},Ariadne:{title:"The Blind Prophet",dmg:5,hp:11,abilities:{passive:{name:"Dimensional Decision",effect:"Once during your turn when a Room Tile is revealed: reveal the top 3 Room Cards of that revealed Room Tile from the respective deck and choose 1. The revealed Room Tile is now that chosen Room Card. Shuffle the other Room Cards revealed this way back into their respective decks"},active:{name:"Darkness Falls",effect:"Success roll: debuff Intelligence Lvl (#spec) Enemies with Blind until Ariadne becomes active"},ultimate:{name:"Foreseer's Favour",effect:"Once per Room: Ariadne gains the following ability based on the current Room Type:<br>Mob/Boss Room - Ariadne gains Intelligence Lvl (#spec) DMG until Ariadne Dies or leaves the current Room<br>Trap Room - Ariadne gains + Intelligence Lvl (#spec) Success roll for the Room<br>Treasure Room - If an Item is acquired: Acquire 1 Item",recharge:5}}},Psykoshka:{title:"The Lost Familiar",dmg:4,hp:13,abilities:{passive:{name:"Symmetry",effect:"Psykoshka gains Intelligence Lvl (#spec) DMG"},active:{name:"Copycat",effect:"Psykoshka can use the active ability of 1 ally User and gains that User's Special Stat and Special Stat Lvl until Psykoshka becomes active"},ultimate:{name:"Loyalty",effect:"Ally Users gain Intelligence Lvl (#spec) Special Stat Lvl until Psykoshka becomes active",recharge:8}}}}},Slayer:{spec_type:"Courage",characters:{"Grimwulf kaiser":{title:"The Howling Death",dmg:9,hp:9,abilities:{passive:{name:"Battle Howl",effect:"Gain + Courage Lvl (#spec) Decisive roll"},active:{name:"Duality",effect:"Deal half of DMG (#dmg) + Courage Lvl (#spec) (rounded up) to 2 different Enemies "},ultimate:{name:"Hellhound",effect:"If no Hellhound Tokens exists: spawn a Hellhound Token with Courage Lvl (#spec) DMG and Courage Lvl (#spec) Max HP. Hellhound Token is treated as an ally User (cannot acquire or hold Items). If Grimwulf Kaiser is targeted for an attack: Hellhound Token is attacked instead",recharge:5}}},Jackal:{title:"The Soundslinger",dmg:7,hp:7,abilities:{passive:{name:"Sonic Snipe",effect:"During Battle before Decisive roll, Success roll: Jackal can immediately attack 1 Enemy"},active:{name:"Distortion",effect:"Deal Courage Lvl (#spec) DMG to all Enemies with debuffs"},ultimate:{name:"EQ",effect:"Target 1 User and 1 Basic Enemy: Halve the sum of those targets' current HP (rounded up). The targeted User and Basic Enemy's HP become the result",recharge:7}}},Vulcana:{title:"The Pyroxian Flame",dmg:8,hp:8,abilities:{passive:{name:"Overheat",effect:"When Vulcana defeats an Enemy: deal any overkill DMG to another Enemy"},active:{name:"Fever",effect:"Vulcana gains Courage Lvl (#spec) DMG for the next attack"},ultimate:{name:"Pyreball",effect:"Success roll: Vulcana deals DMG (#dmg) + Courage Lvl (#spec) to 1 Enemy. This ability repeats 3 times",recharge:6}}}}},Enchanter:{spec_type:"Aura",characters:{"Misteyes Snow":{title:"The White Fox",dmg:3,hp:14,abilities:{passive:{name:"Empath",effect:"When Misteyes Snow Recovers HP: Recover 1 ally User for the same amount + Aura Lvl (#spec) HP"},active:{name:"Erasure",effect:"Remove all debuffs on Aura Lvl (#spec) ally Users"},ultimate:{name:"Light of Life",effect:"Resurrect 1 Dead User",recharge:10}}},Dexler:{title:"The Mad Alchemist",dmg:1,hp:11,abilities:{passive:{name:"Duplicate",effect:"When a Consumable Item would be discarded, Success roll: the Consumable Item is not discarded"},active:{name:"Alchemic Warfare",effect:"Discard 1 Consumable Item: deal 5 + Aura Lvl (#spec) DMG to 1 Enemy or 1 ally User Recovers 5 + Aura Lvl (#spec) HP"},ultimate:{name:"The Creator",effect:"Search for 1 Consumable Item in the Item deck and acquire it",recharge:7}}},Faerie:{title:"The Fable of the Forest",dmg:0,hp:13,abilities:{passive:{name:"Blessing of the Fae",effect:"While Faerie is at Max HP: Faerie and ally Users gain + 1 Success roll and Aura Lvl (#room) DMG"},active:{name:"Sacred Medicine",effect:"1 User Recovers Aura Lvl (#spec) HP"},ultimate:{name:"Faeth",effect:"1 active User Recovers to Max HP and loses all debuffs. That User becomes inactive",recharge:7}}}}},Trickster:{spec_type:"Luck",characters:{Ein:{title:"The Shadewalker",dmg:5,hp:10,abilities:{passive:{name:"Get Chance and Luck",effect:"When Ein or an ally User pass a Success roll: Ein gains Luck Lvl (#spec) DMG. This effect can stack but resets if Ein leaves the current Room, Dies or if a Success roll fails"},active:{name:"Gamble",effect:"Ally Users gain + Luck Lvl (#spec) Success roll. This ability can be used in a Trap Room and lasts until Ein becomes active"},ultimate:{name:"Shadow Sneak",effect:"Upon discovering a Trap Room, Success roll: that discovered Trap Room is disabled",recharge:7}}},Zuciel:{title:"The Phantom of Sin",dmg:0,hp:13,abilities:{passive:{name:"Greed",effect:"Zuciel cannot gain DMG from any Gear but gains DMG equal to the Party's total G (#gold). Zuciel's Party can buy Items for 1 less G. This ability cannot be negated by Silence"},active:{name:"Sloth",effect:"Zuciel Recovers Luck Lvl (#spec) HP"},ultimate:{name:"Wrath",effect:"If all ally Users are active: Zuciel can attack Luck Lvl (#spec) Enemies once each. Discard Luck Lvl (#spec) G. All ally Users become inactive",recharge:5}}},Marina:{title:"The Chronokeeper",dmg:5,hp:10,abilities:{passive:{name:"Choice of Chronos",effect:"When an Item is acquired: Marina can discard the Item and acquire a new one instead. This can be repeated Luck Lvl (#spec) times"},active:{name:"Rewrite Destiny",effect:"Whenever a die is rolled: Marina can ignore the result and roll once more"},ultimate:{name:"Gift of the Chronokeepers",effect:"Once per Room: all ally Users's Ultimate Gauge recharge by Luck Lvl (#spec)",recharge:10}}}}}},getCharacterData:function(e){e=e.split(Select.KEY_DELIMITER);const t=Classes.CLASSES[e[0]].characters[e[1]];return t.class=e[0],t.name=e[1],t.specType=Classes.CLASSES[e[0]].spec_type,t},makeCharacter:function(e,t,a=null){const s=studlyCase(t.split(Select.KEY_DELIMITER)[1]);return Classes[s]?new Classes[s](e,t,a):new Character(e,t,a)}};Classes.$CLASS_SELECT=function(){const e={};for(let t in Classes.CLASSES){e[t]={};for(let a in Classes.CLASSES[t].characters)e[t][a]=a}return Select.makeGroupedSelect(e,"js-class-select",!0)}();class Character{static get MAX_LEVEL(){return 3}static get LEVEL_BONUS(){return 2}static get STATUSES(){return["hp","dmg","spec","recharge"]}constructor(e,t,a=null){this.$node=e;const s=Classes.getCharacterData(t);this.class=s.class,this.name=s.name,this.specType=s.specType,this.abilities=s.abilities,this.$node.removeClass(Object.keys(Classes.CLASSES).join(" ")).addClass(this.class),this.level=0,this.globalMod={dmg:0},this.$icon=this.$node.find(".js-icon").attr("src","./public/img/"+snakeCase(this.name)+".png"),this.$title=this.$node.find(".js-title").html(s.title),this.$class=this.$node.find(".js-class-select"),this.$debuffs=this.$node.find(".js-debuff"),this.$debuffs.each((e,t)=>$(t).removeClass("checked")),this.$ultimate=this.$node.find(".js-ability-ultimate"),this.hp={current:s.hp,base:s.hp,moddedValue:s.hp,$current:this.$node.find(".js-hp-current").val(s.hp),$value:this.$node.find(".js-hp-max"),$detail:this.$node.find(".js-hp-detail"),$mod:this.$node.find(".js-hp-mod")},this.dmg={base:s.dmg,moddedValue:s.dmg,$value:this.$node.find(".js-dmg-value").val(s.dmg),$detail:this.$node.find(".js-dmg-detail"),$mod:this.$node.find(".js-dmg-mod")},this.spec={base:1,moddedValue:1,$name:this.$node.find(".js-spec-name").html(s.specType),$value:this.$node.find(".js-spec-value"),$detail:this.$node.find(".js-spec-detail"),$mod:this.$node.find(".js-spec-mod")},this.recharge={current:0,base:s.abilities.ultimate.recharge,moddedValue:s.abilities.ultimate.recharge,$current:this.$node.find(".js-recharge-current").val(0),$value:this.$node.find(".js-recharge-value"),$detail:this.$node.find(".js-recharge-detail"),$mod:this.$node.find(".js-recharge-mod")},this.gear=[],this.$gear=this.$node.find(".js-gear"),this.$gear.find(".js-gear-select").val("-"),this.$node.find(".js-gear .js-show-detail, .js-gear .js-detail, .js-item .js-show-detail, .js-item .js-detail").addClass("hidden").removeClass("pressed"),this.$node.find(".js-status-mod").val(""),a&&this.fromBundle(a),this.refresh(),this.$node.find(".js-character-detail").slideDown()}updateAbilities(){for(let e in this.abilities){const t=this.abilities[e];let a=t.effect;a=(a=(a=(a=a.replace(/#dmg/g,"<strong>"+this.dmg.moddedValue+"</strong>")).replace(/#spec/g,'<strong class="spec">'+this.spec.moddedValue+"</strong>")).replace(/#room/g,"<strong>"+GAME.getKeyShards()+"</strong>")).replace(/#gold/g,"<strong>"+GAME.getGold()+"</strong>"),this.$node.find(".js-ability-"+e+" .js-ability-name").html(t.name),this.$node.find(".js-ability-"+e+" .js-detail").html(a)}}mod(e){const t=this.getStatusMod(e),a=this[e].base+this.getLevelMod(e);this[e].moddedValue=Math.max(0,a+t),this[e].$value.html(this[e].moddedValue),this.updateStatusDetail(e,t,a),this.updateCurrentStatus(e),this.updateAbilities()}getLevelMod(e){return-1===["hp","dmg"].indexOf(e)?0:"zuciel"==this.name&&"dmg"==e?0:this.level*Character.LEVEL_BONUS}getStatusMod(e){return int(this[e].$mod.val())+this.getGearMod(e)+this.getGlobalCharacterMod(e)}getGearMod(e){const t=this.specType;return this.gear.reduce(function(a,s){return!s||"spec"===e&&s.spec_type&&s.spec_type!==t||(a+=s[e]||0),a},0)}getGlobalCharacterMod(e){return $(".js-character").toArray().reduce(function(t,a){const s=$(a).data("character");return t+(s?int(s.globalMod[e]):0)},0)}updateStatusDetail(e,t,a){if(0!==t){const s=t>0?" + ":" - ";this[e].$detail.html(a+s+Math.abs(t)),this[e].$detail.parent().addClass("character-status-modified")}else this[e].$detail.html(""),this[e].$detail.parent().removeClass("character-status-modified")}updateCurrentStatus(e){-1!==["hp","recharge"].indexOf(e)&&(this[e].current=Math.min(this[e].current,this[e].moddedValue),this[e].$current.val(this[e].current),"recharge"===e&&(this.recharge.current===this[e].moddedValue?this.$ultimate.addClass("charged"):this.$ultimate.removeClass("charged")))}changeCurrent(e){this[e].current=int(this[e].$current.val()),this.mod(e),"hp"===e&&0===this.hp.current?this.$node.addClass("dead"):this.$node.removeClass("dead")}changeGear(e,t){const a=Gear.getGearData(t),s=a&&(!a.limit_class||this.class===a.limit_class);return this.gear[e]=s?a:void 0,this.refresh(),this.updateEffect(this.gear[e],$(this.$gear[e])),s&&this.gear[e].onEquip&&this.gear[e].onEquip(this),s}changeItem(e,t){const a=Items.getItemData(t);this.updateEffect(a,e)}updateEffect(e,t){e&&e.effect?(t.find(".js-show-detail").removeClass("hidden"),t.find(".js-detail").html(e.effect)):(t.find(".js-show-detail, .js-detail").addClass("hidden"),t.find(".js-detail").html(""))}updateLevel(e){this.level=Math.min(Character.MAX_LEVEL,Math.max(0,e)),this.hp.$current.val(this.hp.base+this.getLevelMod("hp")+this.getStatusMod("hp")),this.changeCurrent("hp"),this.mod("dmg")}refresh(){for(let e of Character.STATUSES)this.mod(e)}addDebuff(e){const t=this.$debuffs.filter('[data-type="'+e+'"]'),a=t.hasClass("checked");return this.canDebuff(e)&&t.addClass("checked"),a!==t.hasClass("checked")}canDebuff(e){for(let e of this.gear)if(e&&"Magus' Cloak"===e.name)return!1;return!0}removeDebuff(e){const t=this.$debuffs.filter('[data-type="'+e+'"]');return!!t.hasClass("checked")&&(t.removeClass("checked"),!0)}toBundle(){const e={debuffs:this.$debuffs.map((e,t)=>$(t).hasClass("checked")).toArray(),character_key:Select.makeKey(this.class,this.name),level:this.level,hp:{current:this.hp.current,mod:int(this.hp.$mod.val())},dmg:{mod:int(this.dmg.$mod.val())},spec:{mod:int(this.spec.$mod.val())},recharge:{current:this.recharge.current,mod:int(this.recharge.$mod.val())},gear:[],items:[]};for(let t of this.gear)t&&e.gear.push(Gear.getGearKey(t));return this.$node.find(".js-item select").each(function(t,a){const s=$(a).val();s&&e.items.push(s)}),e}fromBundle(e){this.$class.val(e.character_key),this.level=e.level;for(let t in e.gear)this.gear[t]=Gear.getGearData(e.gear[t]),$(this.$gear[t]).find(".js-gear-select").val(e.gear[t]),this.updateEffect(this.gear[t],$(this.$gear[t]),"gear");const t=this.$node.find(".js-item select");for(let a in e.items)$(t[a]).val(e.items[a]).trigger("change");for(let t of Character.STATUSES)this[t].$mod.val(int(e[t].mod)),-1!==["hp","recharge"].indexOf(t)&&(this[t].current=e[t].current);for(let t in e.debuffs)e.debuffs[t]&&$(this.$debuffs[t]).addClass("checked")}}Classes.Faerie=class extends Character{mod(e){if(super.mod(e),"hp"!==e)return;const t=this.hp.current===this.hp.moddedValue?GAME.getKeyShards():0;t!==this.globalMod.dmg&&(this.globalMod.dmg=t,$(".js-character").each(function(e,t){const a=$(t).data("character");a&&a.mod("dmg")}))}},Classes.T4OMKII=class extends Character{mod(e){super.mod(e),"spec"===e&&this.mod("hp")}getStatusMod(e){return super.getStatusMod(e)+("hp"===e?this.spec.base+this.getStatusMod("spec"):0)}canDebuff(e){return"bleed"!==e&&"fear"!==e&&super.canDebuff(e)}},Classes.Zuciel=class extends Character{mod(e){const t=this.getStatusMod(e),a=("dmg"===e?GAME.getGold():this[e].base)+this.getLevelMod(e);this[e].moddedValue=Math.max(0,a+t),this[e].$value.html(this[e].moddedValue),this.updateStatusDetail(e,t,a),this.updateCurrentStatus(e),this.updateAbilities()}updateStatusDetail(e,t,a){if(0!==t){const s=t>0?" + ":" - ";this[e].$detail.html(a+s+Math.abs(t)),this[e].$detail.parent().addClass("character-status-modified")}else"dmg"===e&&0!==GAME.getGold()?(this[e].$detail.html(""),this[e].$detail.parent().addClass("character-status-modified")):(this[e].$detail.html(""),this[e].$detail.parent().removeClass("character-status-modified"))}getGearMod(e){return"dmg"===e?0:super.getGearMod(e)}};const Items={ITEMS:{"Bangbang Bomb":{cost:3,effect:"Deal 5 DMG to 1 Enemy "},"Counterfeit Coin":{cost:3,effect:"This Item is treated as 1G"},Elixir:{cost:3,effect:"Recharges the User's Ultimate Gauge to Max"},"Fortune's Fruit":{cost:3,effect:"User gains +2 Success roll for the Room"},Minimimic:{cost:3,effect:"Immediately battle a Mimic Mob"},Panacea:{cost:3,effect:"Removes all Debuffs from 1 User"},Potion:{cost:3,effect:"1 User Recovers (Room Lvl) +5 HP"},"Resurrection Ring":{cost:15,effect:"Resurrects 1 Dead User to Max HP with no Debuffs"},"Shine Shield":{cost:3,effect:"Blocks 5 DMG"},"Smoke Bomb":{cost:3,effect:"All Users can Escape the current Room and return to the previous Room. The Escaped Room Tile is Reset"},"Sorcerer's Eye":{cost:3,effect:"Reveals all adjacent Room Tiles. Any Room not entered by the end of the turn is reset"},"Stamina Potion":{cost:3,effect:"1 inactive User becomes active"},"Tasty Haste":{cost:3,effect:"Grants +2 Decisive roll for the Room"}},getItemData:function(e){const t=Items.ITEMS[e];if(t)return t.name=e,t}};Items.$ITEM_SELECT=Select.makeSelect(Items.ITEMS,"js-item-select");class Storage{static localStorageAvailable(){try{return!!localStorage}catch(e){return!1}}static get SAVE_DELAY(){return 5e3}static get PROMPT(){return{request:{message:"Would you like to save your data locally?",no:"No, don't!",yes:"Sure"},update:{message:"Hey, we've updated, so old data will be deleted. Sorry!<br>Do you still want to save your data locally?",no:"Nah",yes:"Yes please!"}}}constructor(e){this.$mainContent=e,this.gameData={},this.savePid={},this.$storagePrompt=$(".js-storage-prompt");const t=this;this.$storagePrompt.on("click",".js-prompt-button",function(){"yes"===$(this).data("answer")&&t.saveToStorage(),t.$storagePrompt.remove()}),$(document).on("change",this.queueSave.bind(this))}queueSave(){Storage.localStorageAvailable()&&(window.clearTimeout(this.savePid),this.savePid=window.setTimeout(this.saveToStorage.bind(this),Storage.SAVE_DELAY))}saveToStorage(){this.gameData[APP_VERSION]={key_shards:GAME.getKeyShards(),gold:GAME.getGold(),characters:[]};const e=this.gameData;this.$mainContent.find(".js-character").each(function(t,a){const s=$(a).data("character");s&&e[APP_VERSION].characters.push(s.toBundle())}),localStorage.visseria=JSON.stringify(this.gameData)}loadFromStorage(e,t,a){if(Storage.localStorageAvailable()&&localStorage.visseria)try{if(this.gameData=JSON.parse(localStorage.visseria),Object.keys(this.gameData).length>0&&!this.gameData[APP_VERSION])throw this.showPrompt("update"),"App was updated to version: "+APP_VERSION;if(t.val(this.gameData[APP_VERSION].key_shards),a.val(this.gameData[APP_VERSION].gold),this.gameData[APP_VERSION].characters)for(let t of this.gameData[APP_VERSION].characters)e(t);this.$mainContent.find(".js-character").each(function(e,t){const a=$(t).data("character");a&&a.refresh()})}catch(e){console.error("An error occurred while loading from storage:\n"+e)}else Storage.localStorageAvailable()&&this.showPrompt("request")}showPrompt(e){this.$storagePrompt.find(".js-prompt-message").html(Storage.PROMPT[e].message),this.$storagePrompt.find(".js-prompt-button.no").html(Storage.PROMPT[e].no),this.$storagePrompt.find(".js-prompt-button.yes").html(Storage.PROMPT[e].yes),this.$storagePrompt.removeClass("hidden")}}const APP_VERSION="v2",GAME={};$(function(){$(".js-version").html(APP_VERSION);const e=5,t=$(".js-character-template .js-character"),a=$(".js-key-shards"),s=$(".js-gold"),i=$(".js-main-content"),r=$(".js-add-character"),c=new Storage(i);function n(e=null){const a=t.clone();a.insertBefore(r.parent()),e&&o(a,e.character_key,e)}function o(e,t,a=null){const s=Classes.makeCharacter(e,t,a);return e.data("character",s),s}function l(){i.find(".js-character").length>=e?r.hide():r.show()}GAME.getKeyShards=(()=>int(a.val())),GAME.getGold=(()=>int(s.val())),t.find(".js-class").append(Classes.$CLASS_SELECT.clone()),t.find(".js-gear").each((e,t)=>$(t).prepend(Gear.$GEAR_SELECT.clone().attr("data-slot",e))),t.find(".js-item").each((e,t)=>$(t).prepend(Items.$ITEM_SELECT.clone())),r.on("click",function(){n(),l()}),a.on("change",function(){const e=int($(this).val());i.find(".js-character").each(function(t,a){const s=$(a).data("character");s&&s.updateLevel(e)})}),s.on("change",function(){i.find(".js-character").each(function(e,t){const a=$(t).data("character");a&&"Zuciel"===a.name&&a.mod("dmg")})}),$(document).on("click",".js-delete-character",function(){$(this).closest(".js-character").remove(),l(),c.queueSave()}),$(document).on("change",".js-class-select",function(){const e=o($(this).closest(".js-character"),$(this).val());e.updateLevel(GAME.getKeyShards()),"Faerie"===e.name&&i.find(".js-character").each(function(e,t){const a=$(t).data("character");a&&a.refresh()})}),$(document).on("change",".js-gear-select",function(){const e=$(this).closest(".js-character").data("character");e&&(e.changeGear($(this).data("slot"),$(this).val())||$(this).val("-"))}),$(document).on("change",".js-item-select",function(){const e=$(this).closest(".js-character").data("character");e&&e.changeItem($(this).parent(),$(this).val())}),$(document).on("change",".js-status-mod",function(){const e=$(this).closest(".js-character").data("character");e&&e.mod($(this).data("status"))}),$(document).on("change",".js-hp-current, .js-recharge-current",function(){const e=$(this).closest(".js-character").data("character");e&&e.changeCurrent($(this).data("status"))});for(let e of["gear","ability","item"])$(document).on("click",".js-show-detail",function(){$(this).toggleClass("pressed"),$(this).parent().siblings(".js-detail").toggleClass("hidden")});$(document).on("click",".js-debuff",function(){const e=$(this).closest(".js-character").data("character");if(!e)return;let t=!1;(t=$(this).hasClass("checked")?e.removeDebuff($(this).data("type")):e.addDebuff($(this).data("type")))&&c.queueSave()}),c.loadFromStorage(n,a,s),0===i.find(".js-character").length&&n()});